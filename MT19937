#include <iostream>
#include <string.h>
#include <stdio.h>
#include <time.h>
using namespace std;

bool isInit;
int index;
unsigned int MT[624];  //624 * 32 - 31 = 19937

void srand(int seed)
{
    printf("seed:%d\n", seed);
    index = 0;
    isInit = 1;
    MT[0] = seed;
    //对数组的其它元素进行初始化
    for(int i = 1; i < 624; i++)
    {
        unsigned int t = 1812433253 * (MT[i - 1] ^ (MT[i - 1] >> 30)) + i;
        MT[i] = t & 0xffffffff;   //取最后的32位赋给MT[i]
    }
}

void generate()
{
    for(int i = 0; i < 624; i++)
    {
        // 2^31 = 0x80000000
        // 2^31-1 = 0x7fffffff
        unsigned int y = (MT[i] & 0x80000000) + (MT[(i + 1) % 624] & 0x7fffffff);
        MT[i] = MT[(i + 397) % 624] ^ (y >> 1);
        if (y & 1)
            MT[i] ^= 2567483615;
    }
}

unsigned int Rand()
{
    if(!isInit)
        srand((int)time(NULL));
    if(index == 0)
        generate();
    unsigned int y = MT[index];
    y = y ^ (y >> 11);                 //y右移11个bit
    y = y ^ ((y << 7) & 2636928640);   //y左移7个bit与2636928640相与，再与y进行异或
    y = y ^ ((y << 15) & 4022730752);  //y左移15个bit与4022730752相与，再与y进行异或
    y = y ^ (y >> 18);                 //y右移18个bit再与y进行异或
    index = (index + 1) % 624;
    return y;
}

int main()
{
    int cnt = 0;
    for(int i = 0; i < 1000000; i++)
    {
        if(Rand() & 1)  cnt++;
    }
    cout<<cnt / 1000000.0<<"%"<<endl;
    return 0;
}
